MODULE main
   VAR 
     pos1 : 1..10;
     pos2 : 1..10;
     pos3 : 1..10;
     r1 : process robot(pos1,pos2,pos3);  
     r2 : process robot(pos2,pos3,pos1);  
     r3 : process robot(pos3,pos1,pos2);
  ASSIGN
     init(pos1) := 1;
     init(pos2) := 2; 
     init(pos3) := 3; 
  LTLSPEC  (((pos3 > pos2) & (pos2 > pos1)) | ((pos1 > pos3) & (pos3 > pos2)) | ((pos2 > pos1) & (pos1 > pos3))) -> ((G F (pos1 = 1)) & (G F (pos1 = 2)) & (G F (pos1 = 3)) & (G F (pos1 = 4)) & (G F (pos1 = 5)) & (G F (pos1 = 6)) & (G F (pos1 = 7)) & (G F (pos1 = 8)) & (G F (pos1 = 9)) & (G F (pos1 = 10)))

MODULE robot(p1,p2,p3)
   VAR 
     phase : {lc,m};
     move  : -1..1;
   ASSIGN
     init(phase) := lc;
     init(move)  := 0; 
     next(phase) :=
         case
            phase = lc     :  m;
            phase = m      :  lc;
            TRUE           :  phase;
         esac; 
     next(move) :=
         case
            phase = lc & ((((p2 - p1) >= 0)? (p2 - p1 - 1):(p2 - p1 - 1 + 10)) = 0) & ((((p3 - p2) >= 0)? (p3 - p2 - 1):(p3 - p2 - 1 + 10)) = 2)  :  -1;
            phase = lc & ((((p3 - p1) >= 0)? ((10 - 2) - (p3 - p1 - 1)):((10 - 2) - (p3 - p1 - 1 + 10))) = 0) & ((((p2 - p3) >= 0)? ((10 - 2) - (p2 - p3 - 1)):((10 - 2) - (p2 - p3 - 1 + 10))) = 2)  :  1;
            phase = lc & ((((p2 - p1) >= 0)? (p2 - p1 - 1):(p2 - p1 - 1 + 10)) = 1) & ((((p3 - p2) >= 0)? (p3 - p2 - 1):(p3 - p2 - 1 + 10)) = 4)  :  1;
            phase = lc & ((((p3 - p1) >= 0)? ((10 - 2) - (p3 - p1 - 1)):((10 - 2) - (p3 - p1 - 1 + 10))) = 1) & ((((p2 - p3) >= 0)? ((10 - 2) - (p2 - p3 - 1)):((10 - 2) - (p2 - p3 - 1 + 10))) = 4)  :  -1;
            phase = lc & ((((p2 - p1) >= 0)? (p2 - p1 - 1):(p2 - p1 - 1 + 10)) = 3) & ((((p3 - p2) >= 0)? (p3 - p2 - 1):(p3 - p2 - 1 + 10)) = 0)  :  1;
            phase = lc & ((((p3 - p1) >= 0)? ((10 - 2) - (p3 - p1 - 1)):((10 - 2) - (p3 - p1 - 1 + 10))) = 3) & ((((p2 - p3) >= 0)? ((10 - 2) - (p2 - p3 - 1)):((10 - 2) - (p2 - p3 - 1 + 10))) = 0)  :  -1;

            phase = lc & ((((p2 - p1) >= 0)? (p2 - p1 - 1):(p2 - p1 - 1 + 10)) >= 4) & ((((p3 - p2) >= 0)? (p3 - p2 - 1):(p3 - p2 - 1 + 10)) = 0) & ((((p1 - p3) >= 0)? (p1 - p3 - 1):(p1 - p3 - 1 + 10)) > (((p2 - p1) >= 0)? (p2 - p1 - 1):(p2 - p1 - 1 + 10)))  :  1;
            phase = lc & ((((p3 - p1) >= 0)? ((10 - 2) - (p3 - p1 - 1)):((10 - 2) - (p3 - p1 - 1 + 10))) >= 4) & ((((p2 - p3) >= 0)? ((10 - 2) - (p2 - p3 - 1)):((10 - 2) - (p2 - p3 - 1 + 10))) = 0) & ((((p1 - p2) >= 0)? ((10 - 2) - (p1 - p2 - 1)):((10 - 2) - (p1 - p2 - 1 + 10))) > (((p3 - p1) >= 0)? ((10 - 2) - (p3 - p1 - 1)):((10 - 2) - (p3 - p1 - 1 + 10)))) :  -1;

            phase = lc & ((((p2 - p1) >= 0)? (p2 - p1 - 1):(p2 - p1 - 1 + 10)) > 0) & ((((p3 - p2) >= 0)?(p3 - p2 - 1):(p3 - p2 - 1 + 10)) != (((p2 - p1) >= 0)? (p2 - p1 - 1):(p2 - p1 - 1 + 10))) & ((((p1 - p3) >= 0)? (p1 - p3 - 1):(p1 - p3 - 1 + 10)) = (((p2 - p1) >= 0)? (p2 - p1 - 1):(p2 - p1 - 1 + 10)))  :  {1,-1};
            phase = lc & ((((p3 - p1) >= 0)? ((10 - 2) - (p3 - p1 - 1)):((10 - 2) - (p3 - p1 - 1 + 10))) > 0) & ((((p2 - p3) >= 0)? ((10 - 2) - (p2 - p3 - 1)):((10 - 2) - (p2 - p3 - 1 + 10))) != (((p3 - p1) >= 0)? ((10 - 2) - (p3 - p1 - 1)):((10 - 2) - (p3 - p1 - 1 + 10)))) & ((((p1 - p2) >= 0)? ((10 - 2) - (p1 - p2 - 1)):((10 - 2) - (p1 - p2 - 1 + 10))) = (((p3 - p1) >= 0)? ((10 - 2) - (p3 - p1 - 1)):((10 - 2) - (p3 - p1 - 1 + 10)))) :  {1,-1};  


            phase = lc & ((((p2 - p1) >= 0)? (p2 - p1 - 1):(p2 - p1 - 1 + 10)) > 0) & ((((p3 - p2) >= 0)? (p3 - p2 - 1):(p3 - p2 - 1 + 10)) > (((p1 - p3) >= 0)? (p1 - p3 - 1):(p1 - p3 - 1 + 10))) & ((((p1 - p3) >= 0)? (p1 - p3 - 1):(p1 - p3 - 1 + 10)) > (((p2 - p1) >= 0)? (p2 - p1 - 1):(p2 - p1 - 1 + 10))) & (! (((((p2 - p1) >= 0)? (p2 - p1 - 1):(p2 - p1 - 1 + 10)) = 1) & ((((p1 - p3) >= 0)? (p1 - p3 - 1):(p1 - p3 - 1 + 10)) =2)))  :  -1;      
            phase = lc & ((((p3 - p1) >= 0)? ((10 - 2) - (p3 - p1 - 1)):((10 - 2) - (p3 - p1 - 1 + 10))) > 0) & ((((p1 - p2) >= 0)? ((10 - 2) - (p1 - p2 - 1)):((10 - 2) - (p1 - p2 - 1 + 10))) > (((p3 - p1) >= 0)? ((10 - 2) - (p3 - p1 - 1)):((10 - 2) - (p3 - p1 - 1 + 10)))) & ((((p2 - p3) >= 0)? ((10 - 2) - (p2 - p3 - 1)):((10 - 2) - (p2 - p3 - 1 + 10))) > (((p1 - p2) >= 0)? ((10 - 2) - (p1 - p2 - 1)):((10 - 2) - (p1 - p2 - 1 + 10)))) &  (! (((((p3 - p1) >= 0)? ((10 - 2) - (p3 - p1 - 1)):((10 - 2) - (p3 - p1 - 1 + 10))) = 1) & ((((p1 - p2) >= 0)? ((10 - 2) - (p1 - p2 - 1)):((10 - 2) - (p1 - p2 - 1 + 10))) = 2))):  1;

            phase = lc & ((((p2 - p1) >= 0)? (p2 - p1 - 1):(p2 - p1 - 1 + 10)) = 0) & ((((p3 - p2) >= 0)?(p3 - p2 - 1):(p3 - p2 - 1 + 10)) = 0)   :  -1;
            phase = lc & ((((p3 - p1) >= 0)? ((10 - 2) - (p3 - p1 - 1)):((10 - 2) - (p3 - p1 - 1 + 10))) = 0) & ((((p2 - p3) >= 0)? ((10 - 2) - (p2 - p3 - 1)):((10 - 2) - (p2 - p3 - 1 + 10))) = 0)   :  1;     

            phase = lc & ((((p2 - p1) >= 0)? (p2 - p1 - 1):(p2 - p1 - 1 + 10)) = 1) & ((((p3 - p2) >= 0)?(p3 - p2 - 1):(p3 - p2 - 1 + 10)) = 0)   :  -1;
            phase = lc & ((((p3 - p1) >= 0)? ((10 - 2) - (p3 - p1 - 1)):((10 - 2) - (p3 - p1 - 1 + 10))) = 1) & ((((p2 - p3) >= 0)? ((10 - 2) - (p2 - p3 - 1)):((10 - 2) - (p2 - p3 - 1 + 10))) = 0)   :  1;
            TRUE                                                                                                                                    :   0;
         esac; 
     next(p1) := 
         case 
            phase = m & (move + p1) <= 0                      : 10 + (move + p1);
            phase = m & (move + p1) > 0 & (move + p1) <= 10  : (move + p1);
            phase = m & (move + p1) > 10                     : (move + p1) - 10;
            TRUE                                              : p1;
         esac; 
    FAIRNESS
       running 
